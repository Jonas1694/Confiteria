@model ArquitecturaModel.ViewModels.ProductoViewModel

@{
	ViewData["Title"] = "Create";
}

<h1>Crear</h1>

<form asp-action="Create">
	<div asp-validation-summary="ModelOnly" class="text-danger"></div>
	<div class="card card-primary">
		<div class="card-header">
			<h3 class="card-title">Productos</h3>
		</div>
		<div class="card-body">
			<div class="row">

				<div class="col-md-12">
					<div class="form-group">
						<label asp-for="Codigo" class="control-label"></label>
						<input asp-for="Codigo" class="form-control" />
						<span asp-validation-for="Codigo" class="text-danger"></span>
					</div>
				</div>

				<div class="col-md-12">
					<div class="form-group">
						<label asp-for="Descripcion" class="control-label"></label>
						<input asp-for="Descripcion" class="form-control" />
						<span asp-validation-for="Descripcion" class="text-danger"></span>
					</div>
				</div>
				<div class="col-md-12">
					<div class="form-group">
						<label asp-for="Stock" class="control-label"></label>
						<input asp-for="Stock" class="form-control txtn" />
						<span asp-validation-for="Stock" class="text-danger"></span>
					</div>
				</div>
				<div class="col-md-12">
					<div class="form-group">
						<label asp-for="PrecioDolar" class="control-label"></label>
						<input asp-for="PrecioDolar" class="form-control" />
						<span asp-validation-for="PrecioDolar" class="text-danger"></span>
					</div>
				</div>
				<div class="col-md-12">
					<div class="form-group">
						<label asp-for="Precio" class="control-label"></label>
						<input asp-for="Precio" type="hidden"/>
						<label class="form-control" id="lblDolar"></label>
						<span asp-validation-for="Precio" class="text-danger"></span>
					</div>
				</div>
			</div>
		</div>
		<div class="card-footer">
			<input type="submit" value="Crear" class="btn btn-outline-primary" />
			<a asp-action="Index" class="btn btn-outline-success">Regresar</a>
		</div>
	</div>
</form>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js" integrity="sha512-pHVGpX7F/27yZ0ISY+VVjyULApbDlD0/X0rgGbTqCE7WFW5MezNTWG/dnhtbBuICzsd0WQPgpE4REBLv+UqChw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
	<script>
		let taza = 0;
		jQuery(document).ready(function () {
			GetTaza();
			$('#PrecioDolar').mask('#.##0,00', {reverse:true});
			jQuery('.txtn').keypress(function (tecla) {
				if (tecla.charCode < 48 || tecla.charCode > 57) return false;
			});
			$('#PrecioDolar').keyup(function (e) {
				var value = $(this).val().replace('.','').replace(',','.');
				var t = value * taza.toFixed(2);
				$('#lblDolar').text(t).formatCurrency({ region: 'es-ES', decimalSymbol: ',', digitGroupSymbol: '.', symbol: 'Bs ' });
				$('#Precio').val(t);
				

			});
		});
		jQuery('.txt').keypress(function (tecla) {
			if ((tecla.charCode < 97 || tecla.charCode > 122) && (tecla.charCode < 65 || tecla.charCode > 90) && (tecla.charCode != 45) && (tecla.charCode != 32)) return false;
		});
		function GetTaza() {
			$.ajax({
				url: '/Productos/GetTaza',
				type: "get",
				dataType: "json",
				success: function (data) {
					taza = parseFloat(data.tasa);
				}
			});
		}
	</script>
}

